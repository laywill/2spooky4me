MegaLinter can help you to define the same linter configuration locally

INSTRUCTIONS

- Copy the content of IDE-config folder at the root of your repository
- if you are using Visual Studio Code, just reopen your project after the copy, and you will be prompted to install recommended extensions
- If not, you can install extensions manually using the following links.

IDE EXTENSIONS APPLICABLE TO YOUR PROJECT

black (PYTHON)
  - atom:
    - python-black: https://atom.io/packages/python-black
  - emacs:
    - blacken: https://github.com/pythonic-emacs/blacken
    - reformatter.el: https://github.com/purcell/reformatter.el
    - elpy: https://github.com/jorgenschaefer/elpy
  - idea:
    - black: https://black.readthedocs.io/en/stable/integrations/editors.html#pycharm-intellij-idea
  - sublime:
    - sublack: https://github.com/jgirardet/sublack
  - vscode:
    - VSCode Python Extension: https://marketplace.visualstudio.com/items?itemName=ms-python.python

flake8 (PYTHON)
  - atom:
    - linter-flake8: https://atom.io/packages/linter-flake8
  - idea:
    - flake8-support: https://plugins.jetbrains.com/plugin/11563-flake8-support
  - vscode:
    - Native Support: https://code.visualstudio.com/docs/python/linting#_flake8

isort (PYTHON)
  - atom:
    - atom-python-isort: https://github.com/bh/atom-python-isort
    - atom-isort: https://atom.io/packages/atom-isort
  - emacs:
    - py-isort.el: https://github.com/paetzke/py-isort.el
  - vim:
    - ale: https://github.com/w0rp/ale
    - vim-isort: https://github.com/fisadev/vim-isort#installation
  - vscode:
    - VSCode Python Extension: https://github.com/Microsoft/vscode-python

mypy (PYTHON)
  - atom:
    - linter-mypy: https://atom.io/packages/linter-mypy
  - emacs:
    - Flycheck mypy: https://github.com/lbolla/emacs-flycheck-mypy
  - idea:
    - mypy-official: https://plugins.jetbrains.com/plugin/13348-mypy-official-/
  - sublime:
    - SublimeLinter-contrib-mypy: https://github.com/fredcallaway/SublimeLinter-contrib-mypy
  - vim:
    - Ale: https://github.com/dense-analysis/ale
    - Syntastic: https://github.com/vim-syntastic/syntastic
  - vscode:
    - Mypy: https://marketplace.visualstudio.com/items?itemName=matangover.mypy

pylint (PYTHON)
  - eclipse:
    - PyLint: https://pydev.org/manual_adv_pylint.html
  - idea:
    - PyCharm (Native Support): https://www.jetbrains.com/pycharm/
  - visual_studio:
    - Native Support: https://docs.microsoft.com/fr-fr/visualstudio/python/linting-python-code?view=vs-2019
  - vscode:
    - Native Support: https://code.visualstudio.com/docs/python/linting#_pylint

ruff (PYTHON)
  - idea:
    - Ruff: https://plugins.jetbrains.com/plugin/20574-ruff
  - vscode:
    - Ruff: https://marketplace.visualstudio.com/items?itemName=charliermarsh.ruff

trivy (REPOSITORY)
  - vscode:
    - VSCode Trivy: https://marketplace.visualstudio.com/items?itemName=AquaSecurityOfficial.trivy-vulnerability-scanner

trivy-sbom (REPOSITORY)
  - vscode:
    - VSCode Trivy: https://marketplace.visualstudio.com/items?itemName=AquaSecurityOfficial.trivy-vulnerability-scanner

cspell (SPELL)
  - vscode:
    - Code Spell Checker: https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker
